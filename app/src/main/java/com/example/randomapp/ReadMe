üß† Descripci√≥n General

"RandomApp" es una aplicaci√≥n Android construida desde cero con Jetpack Compose, siguiendo una
arquitectura moderna basada en el patr√≥n MVVM (Model-View-ViewModel).
Est√° dise√±ada como pr√°ctica evaluable de programaci√≥n m√≥vil, con la finalidad de demostrar
conocimientos de:

 --> Inyecci√≥n de dependencias con Hilt (sin KAPT, usando KSP).

 --> Comunicaci√≥n con API REST mediante Retrofit.

 --> Navegaci√≥n entre pantallas usando NavHost y Scaffold.

 --> Dise√±o UI declarativo con Material 3 y Jetpack Compose.

 --> Gesti√≥n de estado con ViewModel y mutableStateOf.

üèóÔ∏è Estructura del Proyecto

com.example.randomapp/
‚îú‚îÄ‚îÄ di/               ‚Üí M√≥dulos Hilt para Retrofit y Repository
‚îú‚îÄ‚îÄ model/            ‚Üí Data class Post
‚îú‚îÄ‚îÄ network/          ‚Üí Interfaz PostApiService (Retrofit)
‚îú‚îÄ‚îÄ repository/       ‚Üí L√≥gica de negocio: PostRepository
‚îú‚îÄ‚îÄ ui/
‚îÇ   ‚îú‚îÄ‚îÄ screens/      ‚Üí PostListScreen, PostDetailScreen
‚îÇ   ‚îî‚îÄ‚îÄ navigation/   ‚Üí AppNavGraph y rutas
‚îú‚îÄ‚îÄ viewmodel/        ‚Üí PostViewModel, PostDetailViewModel
‚îú‚îÄ‚îÄ RandomApp.kt      ‚Üí Clase @HiltAndroidApp
‚îî‚îÄ‚îÄ MainActivity.kt   ‚Üí Scaffold + NavHost

üß™ Funcionalidades Implementadas

üè† Pantalla principal	Carga y muestra lista de posts desde API. Incluye formulario para a√±adir
nuevos posts (POST).

üìÑ Pantalla de detalle	Navega al detalle del post seleccionado. Obtiene los datos desde API
(GET /posts/{id}).

‚úÖ Formulario activo	Inserta nuevos posts simulados con userId = 1. Se a√±ade din√°micamente a la
lista.

üß† Persistencia temporal	Si un post fue insertado, se muestra desde memoria local para evitar
errores 404.

üîß Dependencias principales

 --> Jetpack Compose: UI declarativa moderna.

 --> Material3: Componentes visuales de √∫ltima generaci√≥n.

 --> Retrofit + Gson: Comunicaci√≥n con API REST.

 --> Hilt + KSP: Inyecci√≥n de dependencias moderna.

 --> Navigation Compose: Manejo de rutas entre pantallas.

 --> ViewModel + State: Gesti√≥n de estado y ciclo de vida.

üöÄ C√≥mo usar la app

    La app inicia mostrando una lista de posts desde https://jsonplaceholder.typicode.com/posts.

    Puedes usar el formulario superior para a√±adir un post (t√≠tulo + cuerpo).

    El nuevo post se a√±ade al final de la lista.

    Al hacer click sobre cualquier post, navegas a su detalle.

    Los posts reales se consultan por ID. Los nuevos se leen desde memoria.

‚ö†Ô∏è Consideraciones importantes

    La API utilizada no guarda los nuevos posts. El POST devuelve un objeto simulado con id = 101,
    etc., pero no es recuperable por GET. Por eso, la app implementa una l√≥gica para mostrar estos
    elementos desde memoria.

    Es necesario otorgar el permiso de red:
    <uses-permission android:name="android.permission.INTERNET" />


‚úÖ Requisitos m√≠nimos

    Android Studio Flamingo o superior

    JDK 17

    SDK m√≠nimo: 24

    Conexi√≥n a Internet para llamadas a la API


üìö Recursos

    API: https://jsonplaceholder.typicode.com

    Documentaci√≥n Hilt: https://developer.android.com/training/dependency-injection/hilt-android

    Documentaci√≥n Retrofit: https://square.github.io/retrofit

    Jetpack Compose: https://developer.android.com/jetpack/compose